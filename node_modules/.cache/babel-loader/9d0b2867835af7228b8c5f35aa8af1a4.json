{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\User\\\\Desktop\\\\sortable_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\sortable_app\\\\src\\\\App.js\";\n\nimport React, { useState } from \"react\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport styled from \"styled-components\";\nimport \"./styles.css\";\nimport { classes } from './classes.js';\nconst StyledBlockWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: relative;\\n  background: white;\\n  text-align: center;\\n  padding: 20px;\\n  margin-bottom: 10px;\\n  border: 1px solid lightgray;\\n  border-radius: 4px;\\n  cursor: move;\\n  &:hover {\\n    //background: #eeeeee;\\n  }\\n\"])));\nconst sortableOptions = {\n  animation: 150,\n  fallbackOnBody: true,\n  swapThreshold: 0.65,\n  ghostClass: \"ghost\",\n  group: \"shared\"\n};\n\nconst InlineEdit = _ref => {\n  let {\n    value,\n    setValue\n  } = _ref;\n  const [editingValue, setEditingValue] = useState(value);\n\n  const onChange = event => setEditingValue(event.target.value);\n\n  const onKeyDown = event => {\n    if (event.key === \"Enter\" || event.key === \"Escape\") {\n      event.target.blur();\n    }\n  };\n\n  const onBlur = event => {\n    if (event.target.value.trim() === \"\") {\n      setEditingValue(value);\n    } else {\n      setValue(event.target.value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"aria-label\": \"Field name\",\n    value: editingValue,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onBlur: onBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default function App() {\n  const [value, setValue] = useState();\n  const [blocks, setBlocks] = useState([{\n    id: 1,\n    content: \"Team 1\",\n    parent_id: null,\n    type: \"container\",\n    children: [{\n      id: 2,\n      content: classes[0],\n      name: /*#__PURE__*/React.createElement(InlineEdit, {\n        value: value,\n        setValue: setValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }),\n      width: 3,\n      type: \"text\",\n      parent_id: 1\n    }, {\n      id: 3,\n      content: classes[1],\n      width: 3,\n      type: \"text\",\n      parent_id: 1\n    }, {\n      id: 4,\n      content: classes[2],\n      width: 3,\n      type: \"text\",\n      parent_id: 1\n    }, {\n      id: 5,\n      content: classes[3],\n      width: 3,\n      type: \"text\",\n      parent_id: 1\n    }, {\n      id: 6,\n      content: classes[4],\n      width: 3,\n      type: \"text\",\n      parent_id: 1\n    }, {\n      id: 7,\n      content: classes[5],\n      width: 3,\n      type: \"text\",\n      parent_id: 1\n    }]\n  }, {\n    id: 8,\n    content: \"Team 2\",\n    parent_id: null,\n    type: \"container\",\n    children: [{\n      id: 9,\n      content: classes[0],\n      width: 2,\n      type: \"text\",\n      parent_id: 8\n    }, {\n      id: 10,\n      content: classes[1],\n      width: 2,\n      type: \"text\",\n      parent_id: 8\n    }, {\n      id: 11,\n      content: classes[2],\n      width: 2,\n      type: \"text\",\n      parent_id: 8\n    }, {\n      id: 12,\n      content: classes[3],\n      width: 3,\n      type: \"text\",\n      parent_id: 8\n    }, {\n      id: 13,\n      content: classes[4],\n      width: 3,\n      type: \"text\",\n      parent_id: 8\n    }, {\n      id: 14,\n      content: classes[5],\n      width: 3,\n      type: \"text\",\n      parent_id: 8\n    }]\n  }, {\n    id: 15,\n    content: \"Team 3\",\n    parent_id: null,\n    type: \"container\",\n    children: [{\n      id: 16,\n      content: classes[0],\n      width: 3,\n      type: \"text\",\n      parent_id: 15\n    }, {\n      id: 17,\n      content: classes[1],\n      width: 3,\n      type: \"text\",\n      parent_id: 15\n    }, {\n      id: 18,\n      content: classes[2],\n      width: 3,\n      type: \"text\",\n      parent_id: 15\n    }, {\n      id: 19,\n      content: classes[3],\n      width: 3,\n      type: \"text\",\n      parent_id: 15\n    }, {\n      id: 20,\n      content: classes[4],\n      width: 3,\n      type: \"text\",\n      parent_id: 15\n    }, {\n      id: 21,\n      content: classes[5],\n      width: 3,\n      type: \"text\",\n      parent_id: 15\n    }]\n  }]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactSortable, Object.assign({\n    list: blocks,\n    setList: setBlocks\n  }, sortableOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }), blocks.map((block, blockIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BlockWrapper, {\n    key: block.id,\n    block: block,\n    blockIndex: [blockIndex],\n    setBlocks: setBlocks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  })))));\n}\n\nfunction Container(_ref2) {\n  let {\n    block,\n    blockIndex,\n    setBlocks\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactSortable, Object.assign({\n    key: block.id,\n    list: block.children,\n    setList: currentList => {\n      setBlocks(sourceList => {\n        const tempList = [...sourceList];\n        const _blockIndex = [...blockIndex];\n\n        const lastIndex = _blockIndex.pop();\n\n        const lastArr = _blockIndex.reduce((arr, i) => arr[i][\"children\"], tempList);\n\n        console.log(lastIndex);\n        lastArr[lastIndex][\"children\"] = currentList;\n        return tempList;\n      });\n    }\n  }, sortableOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }), block.children && block.children.map((childBlock, index) => {\n    return /*#__PURE__*/React.createElement(BlockWrapper, {\n      key: childBlock.id,\n      block: childBlock,\n      blockIndex: [...blockIndex, index],\n      setBlocks: setBlocks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    });\n  })));\n}\n\nfunction BlockWrapper(_ref3) {\n  let {\n    block,\n    blockIndex,\n    setBlocks\n  } = _ref3;\n  // console.log(block);\n  if (!block) return null;\n\n  if (block.type === \"container\") {\n    return /*#__PURE__*/React.createElement(StyledBlockWrapper, {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 7\n      }\n    }, block.content, /*#__PURE__*/React.createElement(Container, {\n      block: block,\n      setBlocks: setBlocks,\n      blockIndex: blockIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(StyledBlockWrapper, {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }\n    }, block.content);\n  }\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/sortable_app/src/App.js"],"names":["React","useState","ReactSortable","styled","classes","StyledBlockWrapper","div","sortableOptions","animation","fallbackOnBody","swapThreshold","ghostClass","group","InlineEdit","value","setValue","editingValue","setEditingValue","onChange","event","target","onKeyDown","key","blur","onBlur","trim","App","blocks","setBlocks","id","content","parent_id","type","children","name","width","map","block","blockIndex","Container","currentList","sourceList","tempList","_blockIndex","lastIndex","pop","lastArr","reduce","arr","i","console","log","childBlock","index","BlockWrapper"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,kBAAkB,GAAGF,MAAM,CAACG,GAAV,2SAAxB;AAcA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,SAAS,EAAE,GADW;AAEtBC,EAAAA,cAAc,EAAE,IAFM;AAGtBC,EAAAA,aAAa,EAAE,IAHO;AAItBC,EAAAA,UAAU,EAAE,OAJU;AAKtBC,EAAAA,KAAK,EAAE;AALe,CAAxB;;AAQA,MAAMC,UAAU,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AAC1C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAACa,KAAD,CAAhD;;AAEA,QAAMI,QAAQ,GAAIC,KAAD,IAAWF,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaN,KAAd,CAA3C;;AAEA,QAAMO,SAAS,GAAIF,KAAD,IAAW;AAC3B,QAAIA,KAAK,CAACG,GAAN,KAAc,OAAd,IAAyBH,KAAK,CAACG,GAAN,KAAc,QAA3C,EAAqD;AACnDH,MAAAA,KAAK,CAACC,MAAN,CAAaG,IAAb;AACD;AACF,GAJD;;AAMA,QAAMC,MAAM,GAAIL,KAAD,IAAW;AACxB,QAAIA,KAAK,CAACC,MAAN,CAAaN,KAAb,CAAmBW,IAAnB,OAA8B,EAAlC,EAAsC;AACpCR,MAAAA,eAAe,CAACH,KAAD,CAAf;AACD,KAFD,MAEO;AACLC,MAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAR;AACD;AACF,GAND;;AAQA,sBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,kBAAW,YAFb;AAGE,IAAA,KAAK,EAAEE,YAHT;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAKE,IAAA,SAAS,EAAEG,SALb;AAME,IAAA,MAAM,EAAEG,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CA7BD;;AA+BA,eAAe,SAASE,GAAT,GAAe;AAC5B,QAAM,CAACZ,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,CACnC;AACE4B,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,OAAO,EAAE,QAFX;AAGEC,IAAAA,SAAS,EAAE,IAHb;AAIEC,IAAAA,IAAI,EAAE,WAJR;AAKEC,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE8B,MAAAA,IAAI,eAAE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEpB,KAAnB;AAA0B,QAAA,QAAQ,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR;AAIEoB,MAAAA,KAAK,EAAE,CAJT;AAKEH,MAAAA,IAAI,EAAE,MALR;AAMED,MAAAA,SAAS,EAAE;AANb,KADQ,EASR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KATQ,EAgBR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KAhBQ,EAuBR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KAvBQ,EA8BR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KA9BQ,EAqCR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KArCQ;AALZ,GADmC,EAqDnC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,OAAO,EAAE,QAFX;AAGEC,IAAAA,SAAS,EAAE,IAHb;AAIEC,IAAAA,IAAI,EAAE,WAJR;AAKEC,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,OAAO,EAAC1B,OAAO,CAAC,CAAD,CAFjB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KADQ,EAQR;AACEF,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KARQ,EAeR;AACEF,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KAfQ,EAsBR;AACEF,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KAtBQ,EA6BR;AACEF,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KA7BQ,EAoCR;AACEF,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KApCQ;AALZ,GArDmC,EAuGnC;AACEF,IAAAA,EAAE,EAAE,EADN;AAEEC,IAAAA,OAAO,EAAE,QAFX;AAGEC,IAAAA,SAAS,EAAE,IAHb;AAIEC,IAAAA,IAAI,EAAE,WAJR;AAKEC,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KADQ,EAQR;AACEF,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KARQ,EAeR;AACEF,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KAfQ,EAsBR;AACEF,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KAtBQ,EA6BR;AACEF,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KA7BQ,EAoCR;AACEF,MAAAA,EAAE,EAAE,EADN;AAEEC,MAAAA,OAAO,EAAE1B,OAAO,CAAC,CAAD,CAFlB;AAGE+B,MAAAA,KAAK,EAAE,CAHT;AAIEH,MAAAA,IAAI,EAAE,MAJR;AAKED,MAAAA,SAAS,EAAE;AALb,KApCQ;AALZ,GAvGmC,CAAD,CAApC;AA2JA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEJ,MAArB;AAA6B,IAAA,OAAO,EAAEC;AAAtC,KAAqDrB,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGoB,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAQC,UAAR,kBACV;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AACE,IAAA,GAAG,EAAED,KAAK,CAACR,EADb;AAEE,IAAA,KAAK,EAAEQ,KAFT;AAGE,IAAA,UAAU,EAAE,CAACC,UAAD,CAHd;AAIE,IAAA,SAAS,EAAEV,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADD,CADH,CADF,CADF;AAgBD;;AACD,SAASW,SAAT,QAAqD;AAAA,MAAlC;AAAEF,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBV,IAAAA;AAArB,GAAkC;AACnD,sBACE,uDACE,oBAAC,aAAD;AACE,IAAA,GAAG,EAAES,KAAK,CAACR,EADb;AAEE,IAAA,IAAI,EAAEQ,KAAK,CAACJ,QAFd;AAGE,IAAA,OAAO,EAAGO,WAAD,IAAiB;AACxBZ,MAAAA,SAAS,CAAEa,UAAD,IAAgB;AACxB,cAAMC,QAAQ,GAAG,CAAC,GAAGD,UAAJ,CAAjB;AACA,cAAME,WAAW,GAAG,CAAC,GAAGL,UAAJ,CAApB;;AACA,cAAMM,SAAS,GAAGD,WAAW,CAACE,GAAZ,EAAlB;;AACA,cAAMC,OAAO,GAAGH,WAAW,CAACI,MAAZ,CACd,CAACC,GAAD,EAAMC,CAAN,KAAYD,GAAG,CAACC,CAAD,CAAH,CAAO,UAAP,CADE,EAEdP,QAFc,CAAhB;;AAIAQ,QAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACAE,QAAAA,OAAO,CAACF,SAAD,CAAP,CAAmB,UAAnB,IAAiCJ,WAAjC;AACA,eAAOE,QAAP;AACD,OAXQ,CAAT;AAYD;AAhBH,KAiBMnC,eAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBG8B,KAAK,CAACJ,QAAN,IACCI,KAAK,CAACJ,QAAN,CAAeG,GAAf,CAAmB,CAACgB,UAAD,EAAaC,KAAb,KAAuB;AACxC,wBACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAED,UAAU,CAACvB,EADlB;AAEE,MAAA,KAAK,EAAEuB,UAFT;AAGE,MAAA,UAAU,EAAE,CAAC,GAAGd,UAAJ,EAAgBe,KAAhB,CAHd;AAIE,MAAA,SAAS,EAAEzB,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATD,CApBJ,CADF,CADF;AAmCD;;AACD,SAAS0B,YAAT,QAAwD;AAAA,MAAlC;AAAEjB,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBV,IAAAA;AAArB,GAAkC;AACtD;AACA,MAAI,CAACS,KAAL,EAAY,OAAO,IAAP;;AACZ,MAAIA,KAAK,CAACL,IAAN,KAAe,WAAnB,EAAgC;AAC9B,wBACE,oBAAC,kBAAD;AAAoB,MAAA,SAAS,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKK,KAAK,CAACP,OADX,eAEE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEO,KADT;AAEE,MAAA,SAAS,EAAET,SAFb;AAGE,MAAA,UAAU,EAAEU,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAUD,GAXD,MAWO;AACL,wBACE,oBAAC,kBAAD;AAAoB,MAAA,SAAS,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACP,OADT,CADF;AAKD;AACF","sourcesContent":["import React, { useState } from \"react\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport styled from \"styled-components\";\nimport \"./styles.css\";\nimport { classes } from './classes.js'\n\nconst StyledBlockWrapper = styled.div`\n  position: relative;\n  background: white;\n  text-align: center;\n  padding: 20px;\n  margin-bottom: 10px;\n  border: 1px solid lightgray;\n  border-radius: 4px;\n  cursor: move;\n  &:hover {\n    //background: #eeeeee;\n  }\n`;\n\nconst sortableOptions = {\n  animation: 150,\n  fallbackOnBody: true,\n  swapThreshold: 0.65,\n  ghostClass: \"ghost\",\n  group: \"shared\"\n};\n\nconst InlineEdit = ({ value, setValue }) => {\n  const [editingValue, setEditingValue] = useState(value);\n  \n  const onChange = (event) => setEditingValue(event.target.value);\n  \n  const onKeyDown = (event) => {\n    if (event.key === \"Enter\" || event.key === \"Escape\") {\n      event.target.blur();\n    }\n  }\n  \n  const onBlur = (event) => {\n    if (event.target.value.trim() === \"\") {\n      setEditingValue(value);\n    } else {\n      setValue(event.target.value)\n    }\n  }\n\n  return (\n    <input\n      type=\"text\"\n      aria-label=\"Field name\"\n      value={editingValue}\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n      onBlur={onBlur}\n    />\n  );\n};\n\nexport default function App() {\n  const [value, setValue] = useState()\n  const [blocks, setBlocks] = useState([\n    {\n      id: 1,\n      content: \"Team 1\",\n      parent_id: null,\n      type: \"container\",\n      children: [\n        {\n          id: 2,\n          content: classes[0],\n          name: <InlineEdit value={value} setValue={setValue} />,\n          width: 3,\n          type: \"text\",\n          parent_id: 1\n        },\n        {\n          id: 3,\n          content: classes[1],\n          width: 3,\n          type: \"text\",\n          parent_id: 1\n        },\n        {\n          id: 4,\n          content: classes[2],\n          width: 3,\n          type: \"text\",\n          parent_id: 1\n        },\n        {\n          id: 5,\n          content: classes[3],\n          width: 3,\n          type: \"text\",\n          parent_id: 1\n        },\n        {\n          id: 6,\n          content: classes[4],\n          width: 3,\n          type: \"text\",\n          parent_id: 1\n        },\n        {\n          id: 7,\n          content: classes[5],\n          width: 3,\n          type: \"text\",\n          parent_id: 1\n        },\n      ]\n    },\n    \n    {\n      id: 8,\n      content: \"Team 2\",\n      parent_id: null,\n      type: \"container\",\n      children: [\n        {\n          id: 9,\n          content:classes[0],\n          width: 2,\n          type: \"text\",\n          parent_id: 8\n        },\n        {\n          id: 10,\n          content: classes[1],\n          width: 2,\n          type: \"text\",\n          parent_id: 8\n        },\n        {\n          id: 11,\n          content: classes[2],\n          width: 2,\n          type: \"text\",\n          parent_id: 8\n        },\n        {\n          id: 12,\n          content: classes[3],\n          width: 3,\n          type: \"text\",\n          parent_id: 8\n        },\n        {\n          id: 13,\n          content: classes[4],\n          width: 3,\n          type: \"text\",\n          parent_id: 8\n        },\n        {\n          id: 14,\n          content: classes[5],\n          width: 3,\n          type: \"text\",\n          parent_id: 8\n        },\n      ]\n    },\n    {\n      id: 15,\n      content: \"Team 3\",\n      parent_id: null,\n      type: \"container\",\n      children: [\n        {\n          id: 16,\n          content: classes[0],\n          width: 3,\n          type: \"text\",\n          parent_id: 15\n        },\n        {\n          id: 17,\n          content: classes[1],\n          width: 3,\n          type: \"text\",\n          parent_id: 15\n        },\n        {\n          id: 18,\n          content: classes[2],\n          width: 3,\n          type: \"text\",\n          parent_id: 15\n        },\n        {\n          id: 19,\n          content: classes[3],\n          width: 3,\n          type: \"text\",\n          parent_id: 15\n        },\n        {\n          id: 20,\n          content: classes[4],\n          width: 3,\n          type: \"text\",\n          parent_id: 15\n        },\n        {\n          id: 21,\n          content: classes[5],\n          width: 3,\n          type: \"text\",\n          parent_id: 15\n        },\n      ]\n    },\n  ]);\n\n  return (\n    <div className=\"row\">\n      <ReactSortable list={blocks} setList={setBlocks} {...sortableOptions}>\n        {blocks.map((block, blockIndex) => (\n          <div className=\"column\">\n          <BlockWrapper\n            key={block.id}\n            block={block}\n            blockIndex={[blockIndex]}\n            setBlocks={setBlocks}\n          />\n          </div>\n        ))}\n      </ReactSortable>\n    </div>\n  );\n}\nfunction Container({ block, blockIndex, setBlocks }) {\n  return (\n    <>\n      <ReactSortable\n        key={block.id}\n        list={block.children}\n        setList={(currentList) => {\n          setBlocks((sourceList) => {\n            const tempList = [...sourceList];\n            const _blockIndex = [...blockIndex];\n            const lastIndex = _blockIndex.pop();\n            const lastArr = _blockIndex.reduce(\n              (arr, i) => arr[i][\"children\"],\n              tempList\n            );\n            console.log(lastIndex);\n            lastArr[lastIndex][\"children\"] = currentList;\n            return tempList;\n          });\n        }}\n        {...sortableOptions}\n      >\n        {block.children &&\n          block.children.map((childBlock, index) => {\n            return (\n              <BlockWrapper\n                key={childBlock.id}\n                block={childBlock}\n                blockIndex={[...blockIndex, index]}\n                setBlocks={setBlocks}\n              />\n            );\n          })}\n      </ReactSortable>\n    </>\n  );\n}\nfunction BlockWrapper({ block, blockIndex, setBlocks }) {\n  // console.log(block);\n  if (!block) return null;\n  if (block.type === \"container\") {\n    return (\n      <StyledBlockWrapper className=\"block\">\n          {block.content}\n        <Container\n          block={block}\n          setBlocks={setBlocks}\n          blockIndex={blockIndex}\n        />\n      </StyledBlockWrapper>\n    );\n  } else {\n    return (\n      <StyledBlockWrapper className=\"block\">\n        {block.content}\n      </StyledBlockWrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}